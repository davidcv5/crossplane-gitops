apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: okecluster-prod
  labels:
    provider: oci
    service: containerengine
    environment: production
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: oke-prod.crossplane.io/v1alpha1
    kind: Cluster
  
  resources:
  # VCN (Virtual Cloud Network)
  - name: vcn
    base:
      apiVersion: networking.oci.upbound.io/v1alpha1
      kind: Vcn
      spec:
        forProvider:
          cidrBlocks: ["10.1.0.0/16"]
          dnsLabel: "okeclusterprod"
        providerConfigRef:
          name: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.compartmentId
      toFieldPath: spec.forProvider.compartmentId
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.vcnCidr
      toFieldPath: spec.forProvider.cidrBlocks[0]
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.name
      toFieldPath: spec.forProvider.displayName
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.name
      toFieldPath: spec.forProvider.dnsLabel
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.vcnId
    # Add freeform tags
    - type: FromCompositeFieldPath
      fromFieldPath: spec.freeformTags
      toFieldPath: spec.forProvider.freeformTags

  # Internet Gateway
  - name: internet-gateway
    base:
      apiVersion: networking.oci.upbound.io/v1alpha1
      kind: InternetGateway
      metadata:
        labels:
          crossplane.io/name: internet-gateway
      spec:
        forProvider:
          vcnIdSelector:
            matchControllerRef: true
          enabled: true
        providerConfigRef:
          name: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.compartmentId
      toFieldPath: spec.forProvider.compartmentId
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.name
      toFieldPath: spec.forProvider.displayName
      transforms:
      - type: string
        string:
          fmt: "%s-igw"
    # Export IGW ID to status for route table reference
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.internetGatewayId
    # Add freeform tags
    - type: FromCompositeFieldPath
      fromFieldPath: spec.freeformTags
      toFieldPath: spec.forProvider.freeformTags

  # NAT Gateway
  - name: nat-gateway
    base:
      apiVersion: networking.oci.upbound.io/v1alpha1
      kind: NatGateway
      metadata:
        labels:
          crossplane.io/name: nat-gateway
      spec:
        forProvider:
          vcnIdSelector:
            matchControllerRef: true
          blockTraffic: false
        providerConfigRef:
          name: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.compartmentId
      toFieldPath: spec.forProvider.compartmentId
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.name
      toFieldPath: spec.forProvider.displayName
      transforms:
      - type: string
        string:
          fmt: "%s-natgw"
    # Export NAT GW ID to status for route table reference
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.natGatewayId
    # Add freeform tags
    - type: FromCompositeFieldPath
      fromFieldPath: spec.freeformTags
      toFieldPath: spec.forProvider.freeformTags

  # Public Route Table
  - name: public-route-table
    base:
      apiVersion: networking.oci.upbound.io/v1alpha1
      kind: RouteTable
      metadata:
        labels:
          type: public
          environment: production
      spec:
        forProvider:
          vcnIdSelector:
            matchControllerRef: true
          routeRules:
          - description: "Default route to Internet Gateway"
            destinationType: "CIDR_BLOCK"
            destination: "0.0.0.0/0"
        providerConfigRef:
          name: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.compartmentId
      toFieldPath: spec.forProvider.compartmentId
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.name
      toFieldPath: spec.forProvider.displayName
      transforms:
      - type: string
        string:
          fmt: "%s-public-rt"
    # Wire Internet Gateway to route table
    - type: FromCompositeFieldPath
      fromFieldPath: status.internetGatewayId
      toFieldPath: spec.forProvider.routeRules[0].networkEntityId

  # Private Route Table
  - name: private-route-table
    base:
      apiVersion: networking.oci.upbound.io/v1alpha1
      kind: RouteTable
      metadata:
        labels:
          type: private
          environment: production
      spec:
        forProvider:
          vcnIdSelector:
            matchControllerRef: true
          routeRules:
          - description: "Default route to NAT Gateway"
            destinationType: "CIDR_BLOCK"
            destination: "0.0.0.0/0"
        providerConfigRef:
          name: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.compartmentId
      toFieldPath: spec.forProvider.compartmentId
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.name
      toFieldPath: spec.forProvider.displayName
      transforms:
      - type: string
        string:
          fmt: "%s-private-rt"
    # Wire NAT Gateway to route table
    - type: FromCompositeFieldPath
      fromFieldPath: status.natGatewayId
      toFieldPath: spec.forProvider.routeRules[0].networkEntityId

  # Security List for OKE
  - name: oke-security-list
    base:
      apiVersion: networking.oci.upbound.io/v1alpha1
      kind: SecurityList
      metadata:
        labels:
          name: oke
          environment: production
      spec:
        forProvider:
          vcnIdSelector:
            matchControllerRef: true
          
          # Ingress rules
          ingressSecurityRules:
          # Allow all traffic within VCN
          - description: "Allow all traffic within VCN"
            protocol: "all"
            source: "10.1.0.0/16"
            stateless: false
          
          # Allow SSH from anywhere (you may want to restrict this)
          - description: "Allow SSH traffic"
            protocol: "6"
            source: "0.0.0.0/0"
            stateless: false
            tcpOptions:
            - min: 22
              max: 22
          
          # Allow Kubernetes API access
          - description: "Allow Kubernetes API traffic"
            protocol: "6"
            source: "0.0.0.0/0"
            stateless: false
            tcpOptions:
            - min: 6443
              max: 6443
          
          # Allow node-to-node communication (kubelet)
          - description: "Allow node-to-node communication"
            protocol: "6"
            source: "10.1.0.0/16"
            stateless: false
            tcpOptions:
            - min: 10250
              max: 10250
          
          # Allow pod-to-pod communication
          - description: "Allow pod-to-pod communication"
            protocol: "all"
            source: "10.245.0.0/16"
            stateless: false
              
          # Egress rules
          egressSecurityRules:
          # Allow all outbound traffic
          - description: "Allow all outbound traffic"
            protocol: "all"
            destination: "0.0.0.0/0"
            stateless: false
            
        providerConfigRef:
          name: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.compartmentId
      toFieldPath: spec.forProvider.compartmentId
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.name
      toFieldPath: spec.forProvider.displayName
      transforms:
      - type: string
        string:
          fmt: "%s-oke-seclist"
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.vcnCidr
      toFieldPath: spec.forProvider.ingressSecurityRules[0].source

  # Cluster Subnet (Private)
  - name: cluster-subnet
    base:
      dependsOn:
      - name: vcn
      apiVersion: networking.oci.upbound.io/v1alpha1
      kind: Subnet
      metadata:
        labels:
          type: cluster
      spec:
        forProvider:
          vcnIdSelector:
            matchControllerRef: true
          cidrBlock: "10.1.1.0/24"
          dnsLabel: "cluster"
          prohibitInternetIngress: true
          routeTableIdSelector:
            matchLabels:
              type: private
              environment: production
          securityListIdsSelector:
            matchLabels:
              name: oke
              environment: production
        providerConfigRef:
          name: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.compartmentId
      toFieldPath: spec.forProvider.compartmentId
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.clusterSubnetCidr
      toFieldPath: spec.forProvider.cidrBlock
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.name
      toFieldPath: spec.forProvider.displayName
      transforms:
      - type: string
        string:
          fmt: "%s-cluster-subnet"
    # Export cluster subnet ID to composite status
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.clusterSubnetId

  # Node Subnet (Private)
  - name: node-subnet
    base:
      apiVersion: networking.oci.upbound.io/v1alpha1
      kind: Subnet
      metadata:
        labels:
          type: nodes
      spec:
        forProvider:
          vcnIdSelector:
            matchControllerRef: true
          cidrBlock: "10.1.2.0/24"
          dnsLabel: "nodes"
          prohibitInternetIngress: true
          routeTableIdSelector:
            matchLabels:
              type: private
              environment: production
          securityListIdsSelector:
            matchLabels:
              name: oke
              environment: production
        providerConfigRef:
          name: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.compartmentId
      toFieldPath: spec.forProvider.compartmentId
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.nodeSubnetCidr
      toFieldPath: spec.forProvider.cidrBlock
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.name
      toFieldPath: spec.forProvider.displayName
      transforms:
      - type: string
        string:
          fmt: "%s-node-subnet"
    # Capture the node subnet ID in XR status
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.nodeSubnetId

  # Service/LB Subnet (Private)
  - name: service-subnet
    base:
      apiVersion: networking.oci.upbound.io/v1alpha1
      kind: Subnet
      metadata:
        labels:
          type: services
      spec:
        forProvider:
          vcnIdSelector:
            matchControllerRef: true
          cidrBlock: "10.1.3.0/24"
          dnsLabel: "services"
          prohibitInternetIngress: true
          routeTableIdSelector:
            matchLabels:
              type: private
              environment: production
          securityListIdsSelector:
            matchLabels:
              name: oke
              environment: production
        providerConfigRef:
          name: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.compartmentId
      toFieldPath: spec.forProvider.compartmentId
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.serviceSubnetCidr
      toFieldPath: spec.forProvider.cidrBlock
    - type: FromCompositeFieldPath
      fromFieldPath: spec.network.name
      toFieldPath: spec.forProvider.displayName
      transforms:
      - type: string
        string:
          fmt: "%s-service-subnet"

  # OKE Cluster
  - name: oke-cluster
    base:
      dependsOn:
      - name: vcn
      - name: cluster-subnet
      apiVersion: containerengine.oci.upbound.io/v1alpha1
      kind: Cluster
      spec:
        forProvider:
          vcnId: ""  # Will be patched from composite status
          type: "ENHANCED_CLUSTER"
          kubernetesVersion: "v1.33.1"
          
          # Cluster endpoint configuration
          endpointConfig:
          - isPublicIpEnabled: false
            subnetId: ""  # Will be patched from composite status
          
          # Cluster pod network options
          clusterPodNetworkOptions:
          - cniType: "FLANNEL_OVERLAY"
          
          # Cluster options
          options:
          - addOns:
            - isKubernetesDashboardEnabled: false
              isTillerEnabled: false
            admissionControllerOptions:
            - isPodSecurityPolicyEnabled: false
            kubernetesNetworkConfig:
            - podsCidr: "10.245.0.0/16"
              servicesCidr: "10.97.0.0/16"
            serviceLbSubnetIdsSelector:
              matchLabels:
                type: services
            openIdConnectTokenAuthenticationConfig:
            - isOpenIdConnectAuthEnabled: true
              configurationFile: "YXBpVmVyc2lvbjogYXBpc2VydmVyLmNvbmZpZy5rOHMuaW8vdjFiZXRhMQpraW5kOiBBdXRoZW50aWNhdGlvbkNvbmZpZ3VyYXRpb24Kand0OgogIC0gaXNzdWVyOgogICAgICB1cmw6IGh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbQogICAgICBhdWRpZW5jZXM6CiAgICAgICAgLSA3OTc3NjQ0NDY1NjctMjZycTVrdDMzMTYyMWozdXJzdGQwZDVyODFkNnJkZDAuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20KICAgICAgYXVkaWVuY2VNYXRjaFBvbGljeTogTWF0Y2hBbnkKICAgIGNsYWltTWFwcGluZ3M6CiAgICAgIHVzZXJuYW1lOgogICAgICAgIGNsYWltOiAic3ViIgogICAgICAgIHByZWZpeDogIiIKICAgICAgZ3JvdXBzOgogICAgICAgIGNsYWltOiAiZ3JvdXBzIgogICAgICAgIHByZWZpeDogIiIKICAgICAgdWlkOgogICAgICAgIGNsYWltOiAic3ViIgo="
          
                
        providerConfigRef:
          name: default
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.compartmentId
      toFieldPath: spec.forProvider.compartmentId
    - type: FromCompositeFieldPath
      fromFieldPath: status.vcnId
      toFieldPath: spec.forProvider.vcnId
    - type: FromCompositeFieldPath
      fromFieldPath: spec.cluster.name
      toFieldPath: spec.forProvider.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.cluster.kubernetesVersion
      toFieldPath: spec.forProvider.kubernetesVersion
    - type: FromCompositeFieldPath
      fromFieldPath: spec.cluster.type
      toFieldPath: spec.forProvider.type
    - type: FromCompositeFieldPath
      fromFieldPath: spec.cluster.isPublicEndpoint
      toFieldPath: spec.forProvider.endpointConfig[0].isPublicIpEnabled
    - type: FromCompositeFieldPath
      fromFieldPath: status.clusterSubnetId
      toFieldPath: spec.forProvider.endpointConfig[0].subnetId
    - type: FromCompositeFieldPath
      fromFieldPath: spec.cluster.podsCidr
      toFieldPath: spec.forProvider.options[0].kubernetesNetworkConfig[0].podsCidr
    - type: FromCompositeFieldPath
      fromFieldPath: spec.cluster.servicesCidr
      toFieldPath: spec.forProvider.options[0].kubernetesNetworkConfig[0].servicesCidr
    # Add freeform tags to cluster
    - type: FromCompositeFieldPath
      fromFieldPath: spec.freeformTags
      toFieldPath: spec.forProvider.freeformTags
    
    # Map cluster information to status
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.id
      toFieldPath: status.clusterId
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.endpoints[0].privateEndpoint
      toFieldPath: status.clusterEndpoint
    
    # Generate kubeconfig command
    - type: CombineToComposite
      combine:
        variables:
        - fromFieldPath: status.atProvider.id
        - fromFieldPath: spec.region
        strategy: string
        string:
          fmt: "oci ce cluster create-kubeconfig --cluster-id %s --file $HOME/.kube/config --region %s --token-version 2.0.0 --kube-endpoint PRIVATE_ENDPOINT"
      toFieldPath: status.kubeconfigCommand
    
    # Add readiness check to ensure subnet is ready before creating NodePool
    readinessChecks:
    - type: MatchString
      fieldPath: status.nodeSubnetId
      matchString: "ocid1.subnet" 